import java.util.concurrent.Semaphore;

// –ö–ª–∞—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –≥—Ä–∏ –≤ —à–∞—Ö–∏
class ChessGame {
    // –°–µ–º–∞—Ñ–æ—Ä –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —á–µ—Ä–≥–∏ –≥—Ä–∞–≤—Ü—ñ–≤
    private final Semaphore semaphore = new Semaphore(1);
    private int moveNumber = 1; // –õ—ñ—á–∏–ª—å–Ω–∏–∫ —Ö–æ–¥—ñ–≤

    // –ú–µ—Ç–æ–¥ –¥–ª—è —ñ–º—ñ—Ç–∞—Ü—ñ—ó —Ö–æ–¥—É –≥—Ä–∞–≤—Ü—è
    public void makeMove(String playerName) {
        try {
            // –ì—Ä–∞–≤–µ—Ü—å —á–µ–∫–∞—î —Å–≤–æ—î—ó —á–µ—Ä–≥–∏
            semaphore.acquire();

            System.out.println("–•—ñ–¥ " + moveNumber + ":");
            System.out.println("------------------------------------");
            System.out.println((playerName.equals("–ì—Ä–∞–≤–µ—Ü—å 1") ? "üîµ" : "üî¥") + " " + playerName + " —Ä–æ–±–∏—Ç—å —Ö—ñ–¥...");
            System.out.println("‚è≥ –ß–∞—Å –Ω–∞ —Ä–æ–∑–¥—É–º–∏...");
            Thread.sleep(1000);
            System.out.println("‚úÖ " + playerName + " –∑–∞–≤–µ—Ä—à–∏–≤ —Ö—ñ–¥.");
            System.out.println("------------------------------------\n");
            moveNumber++;

        } catch (InterruptedException e) {
            System.out.println("–ì—Ä–∞–≤–µ—Ü—å " + playerName + " –±—É–≤ –ø–µ—Ä–µ—Ä–≤–∞–Ω–∏–π.");
        } finally {
            // –î–æ–∑–≤–æ–ª–∏—Ç–∏ —ñ–Ω—à–æ–º—É –≥—Ä–∞–≤—Ü—é –∑—Ä–æ–±–∏—Ç–∏ —Ö—ñ–¥
            semaphore.release();
        }
    }
}



